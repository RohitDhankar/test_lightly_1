
Lightly_Active_Learning - Feature Extraction Alternative Approach 

https://github.com/RohitDhankar/test_lightly_1/issues/1



nsorflow_gpuenv) dhankar@dhankar-1:~/.../a______lightly_2$ 
(tensorflow_gpuenv) dhankar@dhankar-1:~/.../a______lightly_2$ python __ext_code/knn_notLightly.py > ./__run_logs/test_5_5IMG_.log
2023-06-04 01:47:31.355029: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcuda.so.1
2023-06-04 01:47:31.383966: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:981] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2023-06-04 01:47:31.384166: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1561] Found device 0 with properties: 
pciBusID: 0000:01:00.0 name: GeForce GTX 1650 computeCapability: 7.5
coreClock: 1.71GHz coreCount: 14 deviceMemorySize: 3.82GiB deviceMemoryBandwidth: 119.24GiB/s
2023-06-04 01:47:31.384293: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudart.so.10.1
2023-06-04 01:47:31.385308: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcublas.so.10
2023-06-04 01:47:31.386327: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcufft.so.10
2023-06-04 01:47:31.386478: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcurand.so.10
2023-06-04 01:47:31.387472: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusolver.so.10
2023-06-04 01:47:31.388006: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusparse.so.10
2023-06-04 01:47:31.390225: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudnn.so.7
2023-06-04 01:47:31.390316: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:981] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2023-06-04 01:47:31.390537: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:981] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2023-06-04 01:47:31.390698: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1703] Adding visible gpu devices: 0
2023-06-04 01:47:31.390880: I tensorflow/core/platform/cpu_feature_guard.cc:143] Your CPU supports instructions that this TensorFlow binary was not compiled to use: SSE4.1 SSE4.2 AVX AVX2 FMA
2023-06-04 01:47:31.394889: I tensorflow/core/platform/profile_utils/cpu_utils.cc:102] CPU Frequency: 3000000000 Hz
2023-06-04 01:47:31.395092: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x556cd71cae80 initialized for platform Host (this does not guarantee that XLA will be used). Devices:
2023-06-04 01:47:31.395106: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (0): Host, Default Version
2023-06-04 01:47:31.395249: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:981] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2023-06-04 01:47:31.395429: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1561] Found device 0 with properties: 
pciBusID: 0000:01:00.0 name: GeForce GTX 1650 computeCapability: 7.5
coreClock: 1.71GHz coreCount: 14 deviceMemorySize: 3.82GiB deviceMemoryBandwidth: 119.24GiB/s
2023-06-04 01:47:31.395460: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudart.so.10.1
2023-06-04 01:47:31.395490: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcublas.so.10
2023-06-04 01:47:31.395515: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcufft.so.10
2023-06-04 01:47:31.395527: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcurand.so.10
2023-06-04 01:47:31.395538: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusolver.so.10
2023-06-04 01:47:31.395549: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusparse.so.10
2023-06-04 01:47:31.395561: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudnn.so.7
2023-06-04 01:47:31.395600: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:981] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2023-06-04 01:47:31.395790: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:981] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2023-06-04 01:47:31.395947: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1703] Adding visible gpu devices: 0
2023-06-04 01:47:31.395970: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudart.so.10.1
2023-06-04 01:47:31.450593: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1102] Device interconnect StreamExecutor with strength 1 edge matrix:
2023-06-04 01:47:31.450612: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1108]      0 
2023-06-04 01:47:31.450632: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1121] 0:   N 
2023-06-04 01:47:31.450816: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:981] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2023-06-04 01:47:31.453886: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:981] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2023-06-04 01:47:31.454072: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:981] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2023-06-04 01:47:31.454284: W tensorflow/core/common_runtime/gpu/gpu_bfc_allocator.cc:39] Overriding allow_growth setting because the TF_FORCE_GPU_ALLOW_GROWTH environment variable is set. Original config value was 0.
2023-06-04 01:47:31.454307: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1247] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 3277 MB memory) -> physical GPU (device: 0, name: GeForce GTX 1650, pci bus id: 0000:01:00.0, compute capability: 7.5)
2023-06-04 01:47:31.455743: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x556cda89ff90 initialized for platform CUDA (this does not guarantee that XLA will be used). Devices:
2023-06-04 01:47:31.455756: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (0): GeForce GTX 1650, Compute Capability 7.5
  0%|                                                                                                                   | 0/5 [00:00<?, ?it/s]2023-06-04 01:47:33.899572: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudnn.so.7
2023-06-04 01:47:34.569102: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcublas.so.10
2023-06-04 01:47:35.081416: I tensorflow/stream_executor/cuda/cuda_driver.cc:763] failed to allocate 1.95G (2096037888 bytes) from device: CUDA_ERROR_OUT_OF_MEMORY: out of memory
2023-06-04 01:47:35.081706: I tensorflow/stream_executor/cuda/cuda_driver.cc:763] failed to allocate 1.76G (1886434048 bytes) from device: CUDA_ERROR_OUT_OF_MEMORY: out of memory
2023-06-04 01:47:35.160403: W tensorflow/core/common_runtime/bfc_allocator.cc:311] Garbage collection: deallocate free memory regions (i.e., allocations) so that we can re-allocate a larger region to avoid OOM due to memory fragmentation. If you see this message frequently, you are running near the threshold of the available device memory and re-allocation may incur great performance overhead. You may try smaller batch sizes to observe the performance impact. Set TF_ENABLE_GPU_GARBAGE_COLLECTION=false if you'd like to disable this feature.
2023-06-04 01:47:35.218153: I tensorflow/stream_executor/cuda/cuda_driver.cc:763] failed to allocate 2.95G (3169779712 bytes) from device: CUDA_ERROR_OUT_OF_MEMORY: out of memory
2023-06-04 01:47:35.218191: W tensorflow/core/common_runtime/bfc_allocator.cc:245] Allocator (GPU_0_bfc) ran out of memory trying to allocate 2.27GiB with freed_by_count=0. The caller indicates that this is not a failure, but may mean that there could be performance gains if more memory were available.
2023-06-04 01:47:35.218753: I tensorflow/stream_executor/cuda/cuda_driver.cc:763] failed to allocate 2.95G (3169779712 bytes) from device: CUDA_ERROR_OUT_OF_MEMORY: out of memory
2023-06-04 01:47:35.218775: W tensorflow/core/common_runtime/bfc_allocator.cc:245] Allocator (GPU_0_bfc) ran out of memory trying to allocate 2.27GiB with freed_by_count=0. The caller indicates that this is not a failure, but may mean that there could be performance gains if more memory were available.
2023-06-04 01:47:35.219387: I tensorflow/stream_executor/cuda/cuda_driver.cc:763] failed to allocate 2.95G (3169779712 bytes) from device: CUDA_ERROR_OUT_OF_MEMORY: out of memory
2023-06-04 01:47:35.219409: W tensorflow/core/common_runtime/bfc_allocator.cc:245] Allocator (GPU_0_bfc) ran out of memory trying to allocate 154.32MiB with freed_by_count=0. The caller indicates that this is not a failure, but may mean that there could be performance gains if more memory were available.
2023-06-04 01:47:35.219915: I tensorflow/stream_executor/cuda/cuda_driver.cc:763] failed to allocate 2.95G (3169779712 bytes) from device: CUDA_ERROR_OUT_OF_MEMORY: out of memory
2023-06-04 01:47:35.219937: W tensorflow/core/common_runtime/bfc_allocator.cc:245] Allocator (GPU_0_bfc) ran out of memory trying to allocate 154.32MiB with freed_by_count=0. The caller indicates that this is not a failure, but may mean that there could be performance gains if more memory were available.
2023-06-04 01:47:35.232274: I tensorflow/stream_executor/cuda/cuda_driver.cc:763] failed to allocate 2.95G (3169779712 bytes) from device: CUDA_ERROR_OUT_OF_MEMORY: out of memory
2023-06-04 01:47:35.232307: W tensorflow/core/common_runtime/bfc_allocator.cc:245] Allocator (GPU_0_bfc) ran out of memory trying to allocate 2.27GiB with freed_by_count=0. The caller indicates that this is not a failure, but may mean that there could be performance gains if more memory were available.
2023-06-04 01:47:35.232841: I tensorflow/stream_executor/cuda/cuda_driver.cc:763] failed to allocate 2.95G (3169779712 bytes) from device: CUDA_ERROR_OUT_OF_MEMORY: out of memory
2023-06-04 01:47:35.232858: W tensorflow/core/common_runtime/bfc_allocator.cc:245] Allocator (GPU_0_bfc) ran out of memory trying to allocate 2.27GiB with freed_by_count=0. The caller indicates that this is not a failure, but may mean that there could be performance gains if more memory were available.
2023-06-04 01:47:35.233388: I tensorflow/stream_executor/cuda/cuda_driver.cc:763] failed to allocate 2.95G (3169779712 bytes) from device: CUDA_ERROR_OUT_OF_MEMORY: out of memory
2023-06-04 01:47:35.233401: W tensorflow/core/common_runtime/bfc_allocator.cc:245] Allocator (GPU_0_bfc) ran out of memory trying to allocate 154.32MiB with freed_by_count=0. The caller indicates that this is not a failure, but may mean that there could be performance gains if more memory were available.
2023-06-04 01:47:35.233954: I tensorflow/stream_executor/cuda/cuda_driver.cc:763] failed to allocate 2.95G (3169779712 bytes) from device: CUDA_ERROR_OUT_OF_MEMORY: out of memory
2023-06-04 01:47:35.233966: W tensorflow/core/common_runtime/bfc_allocator.cc:245] Allocator (GPU_0_bfc) ran out of memory trying to allocate 154.32MiB with freed_by_count=0. The caller indicates that this is not a failure, but may mean that there could be performance gains if more memory were available.
100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████| 5/5 [00:02<00:00,  2.43it/s]
Traceback (most recent call last):
  File "__ext_code/knn_notLightly.py", line 421, in <module>
    ls_ftrs = get_img2vec(ls_fileNames,str_cnst_caltech,model_archType,root_dir_label_name)
  File "__ext_code/knn_notLightly.py", line 382, in get_img2vec
    pickle.dump(ls_feature, open('./pickle_files/'+str(str_cnst_caltech)+'_img2vec_.pickle', 'wb'))
FileNotFoundError: [Errno 2] No such file or directory: './pickle_files/caltech_nn_faces_1_img2vec_.pickle'
(tensorflow_gpuenv) dhankar@dhankar-1:~/.../a______lightly_2$ 







----Type(model--- <class 'tensorflow.python.keras.engine.training.Model'>
Num GPUs Available:  1
----root_dir_label_name- faces_1
--get_fileNames_pickle----str_cnst_caltech- caltech_nn_faces_1
--get_fileNames_pickle----root_dir_1- ./datasets/input_dir/imgs/knn_imgs/faces_1/
-[INFO_get_file_list]-file_list-- ['./datasets/input_dir/imgs/knn_imgs/faces_1/image_0017.jpg', './datasets/input_dir/imgs/knn_imgs/faces_1/image_0018.jpg', './datasets/input_dir/imgs/knn_imgs/faces_1/image_0025.jpg', './datasets/input_dir/imgs/knn_imgs/faces_1/image_0003.jpg', './datasets/input_dir/imgs/knn_imgs/faces_1/image_0009.jpg']
---main---ls_fileNames---- 29
-[INFO_get_img2vec]-STARTED--Extracting Features-->>
---get_img2vec---len(ls_fileNames)- 29
--[INFO_get_img2vec]-STARTED---Extracting Contours ----->> 0
-[INFO_get_cntrs]-img_init.shape-- (334, 290, 3)
-[INFO_get_cntrs]--type(max_cntr_area-- <class 'numpy.ndarray'>
-[INFO_get_cntrs]--max_cntr_area-- [[[ 0  0]]

 [[ 0  7]]

 [[ 1  7]]

 ...

 [[ 6 22]]

 [[ 7 21]]

 [[ 7  0]]]
-[INFO_get_cntrs]--type(max_cntr_perimeter--- <class 'list'>
-[INFO_get_cntrs]--type(max_cntr_perimeter--- 289
-[INFO_get_cntrs]--max_cntr_perimeter--- [[[ 0  0]]

 [[ 0  7]]

 [[ 1  7]]

 ...

 [[ 6 22]]

 [[ 7 21]]

 [[ 7  0]]]
---LEN-cntrs---- 289
---img_init.shape---- (334, 290, 3)
--TEST---aa---type(img_max_area_cntr)---- <class 'numpy.ndarray'>
---path_img_cntrs----
 ./output_dir/knn_similar_images/faces_1/max_area_cntr/image
---img_init.shape---- (334, 290, 3)
--TEST---aa---type(img_max_perimeter_cntr)---- <class 'numpy.ndarray'>
---path_img_cntrs----
 ./output_dir/knn_similar_images/faces_1/max_perimeter_cntr/image
---img_init.shape---- (334, 290, 3)
---path_img_cntrs----
 ./output_dir/knn_similar_images/faces_1/all_cntrs/image
-[INFO_extract_features]---type(img_array-->> <class 'numpy.ndarray'>
-[INFO_extract_features]---type(preprocessed_img-->> <class 'numpy.ndarray'>
-[INFO_extract_features]---type(features-->> <class 'numpy.ndarray'>
---normalized_features.shape--- (2048,)
--[INFO_get_img2vec]-STARTED---Extracting Contours ----->> 1
-[INFO_get_cntrs]-img_init.shape-- (332, 263, 3)
-[INFO_get_cntrs]--type(max_cntr_area-- <class 'numpy.ndarray'>
-[INFO_get_cntrs]--max_cntr_area-- [[[128 102]]

 [[125 105]]

 [[124 105]]

 ...

 [[128 104]]

 [[128 103]]

 [[129 102]]]
-[INFO_get_cntrs]--type(max_cntr_perimeter--- <class 'list'>
-[INFO_get_cntrs]--type(max_cntr_perimeter--- 518
-[INFO_get_cntrs]--max_cntr_perimeter--- [[[128 102]]

 [[125 105]]

 [[124 105]]

 ...

 [[128 104]]

 [[128 103]]

 [[129 102]]]
---LEN-cntrs---- 518
---img_init.shape---- (332, 263, 3)
--TEST---aa---type(img_max_area_cntr)---- <class 'numpy.ndarray'>
---path_img_cntrs----
 ./output_dir/knn_similar_images/faces_1/max_area_cntr/image
---img_init.shape---- (332, 263, 3)
--TEST---aa---type(img_max_perimeter_cntr)---- <class 'numpy.ndarray'>
---path_img_cntrs----
 ./output_dir/knn_similar_images/faces_1/max_perimeter_cntr/image
---img_init.shape---- (332, 263, 3)
---path_img_cntrs----
 ./output_dir/knn_similar_images/faces_1/all_cntrs/image
-[INFO_extract_features]---type(img_array-->> <class 'numpy.ndarray'>
-[INFO_extract_features]---type(preprocessed_img-->> <class 'numpy.ndarray'>
-[INFO_extract_features]---type(features-->> <class 'numpy.ndarray'>
---normalized_features.shape--- (2048,)
--[INFO_get_img2vec]-STARTED---Extracting Contours ----->> 2
-[INFO_get_cntrs]-img_init.shape-- (308, 279, 3)
-[INFO_get_cntrs]--type(max_cntr_area-- <class 'numpy.ndarray'>
-[INFO_get_cntrs]--max_cntr_area-- [[[  0   0]]

 [[  0  48]]

 [[  3  48]]

 [[  4  49]]

 [[  3  50]]

 [[  0  50]]

 [[  0  51]]

 [[  1  52]]

 [[  2  52]]

 [[  3  53]]

 [[  2  54]]

 [[  0  54]]

 [[  0 163]]

 [[  1 164]]

 [[  0 165]]

 [[  0 167]]

 [[  1 168]]

 [[  0 169]]

 [[  0 273]]

 [[  3 273]]

 [[  4 272]]

 [[  7 272]]

 [[  8 271]]

 [[ 12 271]]

 [[ 13 270]]

 [[ 23 270]]

 [[ 24 269]]

 [[ 25 269]]

 [[ 26 268]]

 [[ 27 268]]

 [[ 28 267]]

 [[ 29 267]]

 [[ 30 266]]

 [[ 31 266]]

 [[ 32 265]]

 [[ 34 265]]

 [[ 35 264]]

 [[ 37 264]]

 [[ 38 263]]

 [[ 42 263]]

 [[ 43 262]]

 [[ 50 262]]

 [[ 51 261]]

 [[ 52 261]]

 [[ 55 258]]

 [[ 56 258]]

 [[ 57 257]]

 [[ 59 257]]

 [[ 60 256]]

 [[ 63 256]]

 [[ 64 255]]

 [[ 65 255]]

 [[ 66 254]]

 [[ 68 254]]

 [[ 69 253]]

 [[ 71 253]]

 [[ 72 252]]

 [[ 73 252]]

 [[ 74 253]]

 [[ 74 252]]

 [[ 75 251]]

 [[ 75 250]]

 [[ 76 249]]

 [[ 76 248]]

 [[ 79 245]]

 [[ 79 244]]

 [[ 82 241]]

 [[ 83 241]]

 [[ 82 240]]

 [[ 82 237]]

 [[ 83 236]]

 [[ 82 235]]

 [[ 82 232]]

 [[ 81 231]]

 [[ 81 230]]

 [[ 80 229]]

 [[ 80 228]]

 [[ 79 227]]

 [[ 79 226]]

 [[ 78 225]]

 [[ 78 224]]

 [[ 77 223]]

 [[ 77 221]]

 [[ 76 220]]

 [[ 76 218]]

 [[ 75 217]]

 [[ 75 215]]

 [[ 74 214]]

 [[ 74 212]]

 [[ 73 211]]

 [[ 73 208]]

 [[ 72 207]]

 [[ 72 203]]

 [[ 71 202]]

 [[ 71 198]]

 [[ 70 197]]

 [[ 70 193]]

 [[ 69 192]]

 [[ 69 190]]

 [[ 68 189]]

 [[ 68 188]]

 [[ 69 187]]

 [[ 69 185]]

 [[ 69 187]]

 [[ 68 188]]

 [[ 67 187]]

 [[ 67 184]]

 [[ 66 183]]

 [[ 66 176]]

 [[ 65 175]]

 [[ 65 174]]

 [[ 64 173]]

 [[ 64 172]]

 [[ 63 171]]

 [[ 63 170]]

 [[ 62 169]]

 [[ 62 166]]

 [[ 61 165]]

 [[ 61 154]]

 [[ 60 153]]

 [[ 60 146]]

 [[ 61 145]]

 [[ 62 145]]

 [[ 62 144]]

 [[ 61 143]]

 [[ 61 137]]

 [[ 60 136]]

 [[ 60 132]]

 [[ 59 131]]

 [[ 59 127]]

 [[ 58 126]]

 [[ 58 125]]

 [[ 59 124]]

 [[ 58 123]]

 [[ 58 122]]

 [[ 59 121]]

 [[ 58 121]]

 [[ 57 120]]

 [[ 58 119]]

 [[ 58 118]]

 [[ 57 117]]

 [[ 59 115]]

 [[ 59 107]]

 [[ 60 106]]

 [[ 60 104]]

 [[ 61 103]]

 [[ 60 102]]

 [[ 60 100]]

 [[ 61  99]]

 [[ 61  96]]

 [[ 62  95]]

 [[ 62  93]]

 [[ 63  92]]

 [[ 63  89]]

 [[ 64  88]]

 [[ 64  87]]

 [[ 65  86]]

 [[ 64  85]]

 [[ 65  84]]

 [[ 65  83]]

 [[ 66  82]]

 [[ 66  80]]

 [[ 67  79]]

 [[ 66  78]]

 [[ 67  77]]

 [[ 67  76]]

 [[ 68  75]]

 [[ 67  74]]

 [[ 67  73]]

 [[ 68  72]]

 [[ 68  70]]

 [[ 69  69]]

 [[ 69  68]]

 [[ 74  63]]

 [[ 73  62]]

 [[ 75  60]]

 [[ 76  60]]

 [[ 76  59]]

 [[ 77  58]]

 [[ 76  57]]

 [[ 77  56]]

 [[ 78  56]]

 [[ 79  57]]

 [[ 79  55]]

 [[ 81  53]]

 [[ 82  53]]

 [[ 82  52]]

 [[ 85  49]]

 [[ 86  49]]

 [[ 86  48]]

 [[ 87  47]]

 [[ 88  47]]

 [[ 89  46]]

 [[ 93  46]]

 [[ 94  45]]

 [[ 97  45]]

 [[ 98  44]]

 [[ 99  44]]

 [[100  43]]

 [[102  43]]

 [[103  42]]

 [[104  42]]

 [[105  41]]

 [[106  41]]

 [[107  40]]

 [[108  40]]

 [[109  39]]

 [[110  39]]

 [[112  37]]

 [[113  37]]

 [[114  36]]

 [[117  36]]

 [[119  34]]

 [[123  34]]

 [[124  33]]

 [[125  33]]

 [[126  32]]

 [[127  32]]

 [[128  33]]

 [[129  32]]

 [[132  32]]

 [[133  31]]

 [[137  31]]

 [[138  30]]

 [[148  30]]

 [[149  31]]

 [[150  30]]

 [[152  30]]

 [[153  31]]

 [[154  30]]

 [[155  30]]

 [[156  31]]

 [[157  30]]

 [[158  30]]

 [[159  31]]

 [[160  31]]

 [[161  32]]

 [[165  32]]

 [[166  33]]

 [[170  33]]

 [[171  34]]

 [[173  34]]

 [[175  36]]

 [[177  36]]

 [[179  38]]

 [[179  39]]

 [[180  38]]

 [[181  39]]

 [[182  39]]

 [[184  41]]

 [[184  42]]

 [[185  42]]

 [[187  44]]

 [[188  44]]

 [[189  45]]

 [[190  45]]

 [[192  47]]

 [[194  47]]

 [[195  48]]

 [[195  49]]

 [[196  50]]

 [[197  50]]

 [[200  53]]

 [[200  55]]

 [[201  56]]

 [[201  57]]

 [[202  57]]

 [[203  58]]

 [[204  58]]

 [[207  61]]

 [[208  61]]

 [[209  62]]

 [[209  63]]

 [[210  64]]

 [[210  65]]

 [[212  67]]

 [[212  68]]

 [[213  69]]

 [[213  71]]

 [[214  72]]

 [[214  73]]

 [[215  74]]

 [[215  76]]

 [[217  78]]

 [[216  79]]

 [[217  80]]

 [[217  81]]

 [[218  82]]

 [[218  83]]

 [[219  84]]

 [[219  86]]

 [[221  88]]

 [[221  91]]

 [[222  92]]

 [[222  97]]

 [[223  98]]

 [[223  99]]

 [[224 100]]

 [[224 108]]

 [[225 109]]

 [[225 116]]

 [[224 117]]

 [[226 119]]

 [[226 120]]

 [[225 121]]

 [[225 123]]

 [[224 124]]

 [[224 131]]

 [[223 132]]

 [[223 133]]

 [[224 134]]

 [[224 135]]

 [[220 139]]

 [[220 140]]

 [[222 138]]

 [[223 138]]

 [[224 137]]

 [[225 137]]

 [[226 138]]

 [[224 140]]

 [[226 138]]

 [[227 139]]

 [[228 139]]

 [[229 138]]

 [[230 139]]

 [[230 145]]

 [[231 146]]

 [[231 153]]

 [[230 154]]

 [[230 158]]

 [[229 159]]

 [[229 161]]

 [[228 162]]

 [[228 163]]

 [[227 164]]

 [[227 165]]

 [[226 166]]

 [[226 169]]

 [[225 170]]

 [[225 175]]

 [[224 176]]

 [[224 180]]

 [[223 181]]

 [[223 184]]

 [[221 186]]

 [[221 187]]

 [[220 188]]

 [[219 187]]

 [[219 186]]

 [[219 189]]

 [[220 190]]

 [[220 193]]

 [[218 195]]

 [[218 202]]

 [[217 203]]

 [[217 207]]

 [[216 208]]

 [[216 212]]

 [[215 213]]

 [[215 215]]

 [[214 216]]

 [[214 219]]

 [[213 220]]

 [[213 221]]

 [[212 222]]

 [[212 223]]

 [[211 224]]

 [[211 226]]

 [[209 228]]

 [[209 229]]

 [[208 230]]

 [[208 233]]

 [[207 234]]

 [[208 233]]

 [[213 238]]

 [[213 239]]

 [[214 240]]

 [[214 241]]

 [[215 242]]

 [[215 243]]

 [[216 244]]

 [[216 245]]

 [[218 247]]

 [[218 248]]

 [[225 248]]

 [[226 249]]

 [[227 249]]

 [[228 250]]

 [[229 250]]

 [[230 251]]

 [[231 251]]

 [[232 252]]

 [[234 252]]

 [[235 253]]

 [[240 253]]

 [[241 254]]

 [[246 254]]

 [[247 255]]

 [[252 255]]

 [[253 256]]

 [[255 256]]

 [[256 257]]

 [[257 257]]

 [[258 258]]

 [[260 258]]

 [[261 259]]

 [[264 259]]

 [[265 260]]

 [[267 260]]

 [[268 261]]

 [[272 261]]

 [[273 262]]

 [[277 262]]

 [[278 263]]

 [[278 197]]

 [[273 197]]

 [[272 196]]

 [[270 196]]

 [[269 195]]

 [[261 195]]

 [[260 194]]

 [[256 194]]

 [[255 193]]

 [[255 190]]

 [[256 189]]

 [[257 189]]

 [[257 187]]

 [[258 186]]

 [[259 186]]

 [[258 185]]

 [[258 183]]

 [[257 183]]

 [[256 182]]

 [[258 180]]

 [[259 181]]

 [[263 181]]

 [[265 179]]

 [[266 179]]

 [[267 180]]

 [[270 180]]

 [[271 181]]

 [[271 183]]

 [[272 183]]

 [[273 184]]

 [[272 185]]

 [[272 186]]

 [[273 185]]

 [[273 184]]

 [[274 183]]

 [[276 183]]

 [[277 182]]

 [[277 180]]

 [[278 179]]

 [[278 177]]

 [[277 178]]

 [[276 178]]

 [[275 177]]

 [[276 176]]

 [[275 175]]

 [[277 173]]

 [[278 174]]

 [[278 175]]

 [[278 173]]

 [[277 172]]

 [[278 171]]

 [[278 150]]

 [[277 150]]

 [[276 149]]

 [[276 147]]

 [[277 146]]

 [[277 144]]

 [[278 143]]

 [[278  21]]

 [[277  20]]

 [[278  19]]

 [[278   0]]

 [[275   0]]

 [[274   1]]

 [[273   0]]

 [[258   0]]

 [[257   1]]

 [[256   0]]

 [[255   0]]

 [[254   1]]

 [[253   0]]

 [[247   0]]

 [[246   1]]

 [[245   0]]

 [[235   0]]

 [[234   1]]

 [[226   1]]

 [[225   2]]

 [[224   1]]

 [[224   0]]

 [[223   1]]

 [[222   0]]

 [[202   0]]

 [[201   1]]

 [[200   0]]]
-[INFO_get_cntrs]--type(max_cntr_perimeter--- <class 'list'>
-[INFO_get_cntrs]--type(max_cntr_perimeter--- 202
-[INFO_get_cntrs]--max_cntr_perimeter--- [[[  0   0]]

 [[  0  48]]

 [[  3  48]]

 [[  4  49]]

 [[  3  50]]

 [[  0  50]]

 [[  0  51]]

 [[  1  52]]

 [[  2  52]]

 [[  3  53]]

 [[  2  54]]

 [[  0  54]]

 [[  0 163]]

 [[  1 164]]

 [[  0 165]]

 [[  0 167]]

 [[  1 168]]

 [[  0 169]]

 [[  0 273]]

 [[  3 273]]

 [[  4 272]]

 [[  7 272]]

 [[  8 271]]

 [[ 12 271]]

 [[ 13 270]]

 [[ 23 270]]

 [[ 24 269]]

 [[ 25 269]]

 [[ 26 268]]

 [[ 27 268]]

 [[ 28 267]]

 [[ 29 267]]

 [[ 30 266]]

 [[ 31 266]]

 [[ 32 265]]

 [[ 34 265]]

 [[ 35 264]]

 [[ 37 264]]

 [[ 38 263]]

 [[ 42 263]]

 [[ 43 262]]

 [[ 50 262]]

 [[ 51 261]]

 [[ 52 261]]

 [[ 55 258]]

 [[ 56 258]]

 [[ 57 257]]

 [[ 59 257]]

 [[ 60 256]]

 [[ 63 256]]

 [[ 64 255]]

 [[ 65 255]]

 [[ 66 254]]

 [[ 68 254]]

 [[ 69 253]]

 [[ 71 253]]

 [[ 72 252]]

 [[ 73 252]]

 [[ 74 253]]

 [[ 74 252]]

 [[ 75 251]]

 [[ 75 250]]

 [[ 76 249]]

 [[ 76 248]]

 [[ 79 245]]

 [[ 79 244]]

 [[ 82 241]]

 [[ 83 241]]

 [[ 82 240]]

 [[ 82 237]]

 [[ 83 236]]

 [[ 82 235]]

 [[ 82 232]]

 [[ 81 231]]

 [[ 81 230]]

 [[ 80 229]]

 [[ 80 228]]

 [[ 79 227]]

 [[ 79 226]]

 [[ 78 225]]

 [[ 78 224]]

 [[ 77 223]]

 [[ 77 221]]

 [[ 76 220]]

 [[ 76 218]]

 [[ 75 217]]

 [[ 75 215]]

 [[ 74 214]]

 [[ 74 212]]

 [[ 73 211]]

 [[ 73 208]]

 [[ 72 207]]

 [[ 72 203]]

 [[ 71 202]]

 [[ 71 198]]

 [[ 70 197]]

 [[ 70 193]]

 [[ 69 192]]

 [[ 69 190]]

 [[ 68 189]]

 [[ 68 188]]

 [[ 69 187]]

 [[ 69 185]]

 [[ 69 187]]

 [[ 68 188]]

 [[ 67 187]]

 [[ 67 184]]

 [[ 66 183]]

 [[ 66 176]]

 [[ 65 175]]

 [[ 65 174]]

 [[ 64 173]]

 [[ 64 172]]

 [[ 63 171]]

 [[ 63 170]]

 [[ 62 169]]

 [[ 62 166]]

 [[ 61 165]]

 [[ 61 154]]

 [[ 60 153]]

 [[ 60 146]]

 [[ 61 145]]

 [[ 62 145]]

 [[ 62 144]]

 [[ 61 143]]

 [[ 61 137]]

 [[ 60 136]]

 [[ 60 132]]

 [[ 59 131]]

 [[ 59 127]]

 [[ 58 126]]

 [[ 58 125]]

 [[ 59 124]]

 [[ 58 123]]

 [[ 58 122]]

 [[ 59 121]]

 [[ 58 121]]

 [[ 57 120]]

 [[ 58 119]]

 [[ 58 118]]

 [[ 57 117]]

 [[ 59 115]]

 [[ 59 107]]

 [[ 60 106]]

 [[ 60 104]]

 [[ 61 103]]

 [[ 60 102]]

 [[ 60 100]]

 [[ 61  99]]

 [[ 61  96]]

 [[ 62  95]]

 [[ 62  93]]

 [[ 63  92]]

 [[ 63  89]]

 [[ 64  88]]

 [[ 64  87]]

 [[ 65  86]]

 [[ 64  85]]

 [[ 65  84]]

 [[ 65  83]]

 [[ 66  82]]

 [[ 66  80]]

 [[ 67  79]]

 [[ 66  78]]

 [[ 67  77]]

 [[ 67  76]]

 [[ 68  75]]

 [[ 67  74]]

 [[ 67  73]]

 [[ 68  72]]

 [[ 68  70]]

 [[ 69  69]]

 [[ 69  68]]

 [[ 74  63]]

 [[ 73  62]]

 [[ 75  60]]

 [[ 76  60]]

 [[ 76  59]]

 [[ 77  58]]

 [[ 76  57]]

 [[ 77  56]]

 [[ 78  56]]

 [[ 79  57]]

 [[ 79  55]]

 [[ 81  53]]

 [[ 82  53]]

 [[ 82  52]]

 [[ 85  49]]

 [[ 86  49]]

 [[ 86  48]]

 [[ 87  47]]

 [[ 88  47]]

 [[ 89  46]]

 [[ 93  46]]

 [[ 94  45]]

 [[ 97  45]]

 [[ 98  44]]

 [[ 99  44]]

 [[100  43]]

 [[102  43]]

 [[103  42]]

 [[104  42]]

 [[105  41]]

 [[106  41]]

 [[107  40]]

 [[108  40]]

 [[109  39]]

 [[110  39]]

 [[112  37]]

 [[113  37]]

 [[114  36]]

 [[117  36]]

 [[119  34]]

 [[123  34]]

 [[124  33]]

 [[125  33]]

 [[126  32]]

 [[127  32]]

 [[128  33]]

 [[129  32]]

 [[132  32]]

 [[133  31]]

 [[137  31]]

 [[138  30]]

 [[148  30]]

 [[149  31]]

 [[150  30]]

 [[152  30]]

 [[153  31]]

 [[154  30]]

 [[155  30]]

 [[156  31]]

 [[157  30]]

 [[158  30]]

 [[159  31]]

 [[160  31]]

 [[161  32]]

 [[165  32]]

 [[166  33]]

 [[170  33]]

 [[171  34]]

 [[173  34]]

 [[175  36]]

 [[177  36]]

 [[179  38]]

 [[179  39]]

 [[180  38]]

 [[181  39]]

 [[182  39]]

 [[184  41]]

 [[184  42]]

 [[185  42]]

 [[187  44]]

 [[188  44]]

 [[189  45]]

 [[190  45]]

 [[192  47]]

 [[194  47]]

 [[195  48]]

 [[195  49]]

 [[196  50]]

 [[197  50]]

 [[200  53]]

 [[200  55]]

 [[201  56]]

 [[201  57]]

 [[202  57]]

 [[203  58]]

 [[204  58]]

 [[207  61]]

 [[208  61]]

 [[209  62]]

 [[209  63]]

 [[210  64]]

 [[210  65]]

 [[212  67]]

 [[212  68]]

 [[213  69]]

 [[213  71]]

 [[214  72]]

 [[214  73]]

 [[215  74]]

 [[215  76]]

 [[217  78]]

 [[216  79]]

 [[217  80]]

 [[217  81]]

 [[218  82]]

 [[218  83]]

 [[219  84]]

 [[219  86]]

 [[221  88]]

 [[221  91]]

 [[222  92]]

 [[222  97]]

 [[223  98]]

 [[223  99]]

 [[224 100]]

 [[224 108]]

 [[225 109]]

 [[225 116]]

 [[224 117]]

 [[226 119]]

 [[226 120]]

 [[225 121]]

 [[225 123]]

 [[224 124]]

 [[224 131]]

 [[223 132]]

 [[223 133]]

 [[224 134]]

 [[224 135]]

 [[220 139]]

 [[220 140]]

 [[222 138]]

 [[223 138]]

 [[224 137]]

 [[225 137]]

 [[226 138]]

 [[224 140]]

 [[226 138]]

 [[227 139]]

 [[228 139]]

 [[229 138]]

 [[230 139]]

 [[230 145]]

 [[231 146]]

 [[231 153]]

 [[230 154]]

 [[230 158]]

 [[229 159]]

 [[229 161]]

 [[228 162]]

 [[228 163]]

 [[227 164]]

 [[227 165]]

 [[226 166]]

 [[226 169]]

 [[225 170]]

 [[225 175]]

 [[224 176]]

 [[224 180]]

 [[223 181]]

 [[223 184]]

 [[221 186]]

 [[221 187]]

 [[220 188]]

 [[219 187]]

 [[219 186]]

 [[219 189]]

 [[220 190]]

 [[220 193]]

 [[218 195]]

 [[218 202]]

 [[217 203]]

 [[217 207]]

 [[216 208]]

 [[216 212]]

 [[215 213]]

 [[215 215]]

 [[214 216]]

 [[214 219]]

 [[213 220]]

 [[213 221]]

 [[212 222]]

 [[212 223]]

 [[211 224]]

 [[211 226]]

 [[209 228]]

 [[209 229]]

 [[208 230]]

 [[208 233]]

 [[207 234]]

 [[208 233]]

 [[213 238]]

 [[213 239]]

 [[214 240]]

 [[214 241]]

 [[215 242]]

 [[215 243]]

 [[216 244]]

 [[216 245]]

 [[218 247]]

 [[218 248]]

 [[225 248]]

 [[226 249]]

 [[227 249]]

 [[228 250]]

 [[229 250]]

 [[230 251]]

 [[231 251]]

 [[232 252]]

 [[234 252]]

 [[235 253]]

 [[240 253]]

 [[241 254]]

 [[246 254]]

 [[247 255]]

 [[252 255]]

 [[253 256]]

 [[255 256]]

 [[256 257]]

 [[257 257]]

 [[258 258]]

 [[260 258]]

 [[261 259]]

 [[264 259]]

 [[265 260]]

 [[267 260]]

 [[268 261]]

 [[272 261]]

 [[273 262]]

 [[277 262]]

 [[278 263]]

 [[278 197]]

 [[273 197]]

 [[272 196]]

 [[270 196]]

 [[269 195]]

 [[261 195]]

 [[260 194]]

 [[256 194]]

 [[255 193]]

 [[255 190]]

 [[256 189]]

 [[257 189]]

 [[257 187]]

 [[258 186]]

 [[259 186]]

 [[258 185]]

 [[258 183]]

 [[257 183]]

 [[256 182]]

 [[258 180]]

 [[259 181]]

 [[263 181]]

 [[265 179]]

 [[266 179]]

 [[267 180]]

 [[270 180]]

 [[271 181]]

 [[271 183]]

 [[272 183]]

 [[273 184]]

 [[272 185]]

 [[272 186]]

 [[273 185]]

 [[273 184]]

 [[274 183]]

 [[276 183]]

 [[277 182]]

 [[277 180]]

 [[278 179]]

 [[278 177]]

 [[277 178]]

 [[276 178]]

 [[275 177]]

 [[276 176]]

 [[275 175]]

 [[277 173]]

 [[278 174]]

 [[278 175]]

 [[278 173]]

 [[277 172]]

 [[278 171]]

 [[278 150]]

 [[277 150]]

 [[276 149]]

 [[276 147]]

 [[277 146]]

 [[277 144]]

 [[278 143]]

 [[278  21]]

 [[277  20]]

 [[278  19]]

 [[278   0]]

 [[275   0]]

 [[274   1]]

 [[273   0]]

 [[258   0]]

 [[257   1]]

 [[256   0]]

 [[255   0]]

 [[254   1]]

 [[253   0]]

 [[247   0]]

 [[246   1]]

 [[245   0]]

 [[235   0]]

 [[234   1]]

 [[226   1]]

 [[225   2]]

 [[224   1]]

 [[224   0]]

 [[223   1]]

 [[222   0]]

 [[202   0]]

 [[201   1]]

 [[200   0]]]
---LEN-cntrs---- 202
---img_init.shape---- (308, 279, 3)
--TEST---aa---type(img_max_area_cntr)---- <class 'numpy.ndarray'>
---path_img_cntrs----
 ./output_dir/knn_similar_images/faces_1/max_area_cntr/image
---img_init.shape---- (308, 279, 3)
--TEST---aa---type(img_max_perimeter_cntr)---- <class 'numpy.ndarray'>
---path_img_cntrs----
 ./output_dir/knn_similar_images/faces_1/max_perimeter_cntr/image
---img_init.shape---- (308, 279, 3)
---path_img_cntrs----
 ./output_dir/knn_similar_images/faces_1/all_cntrs/image
-[INFO_extract_features]---type(img_array-->> <class 'numpy.ndarray'>
-[INFO_extract_features]---type(preprocessed_img-->> <class 'numpy.ndarray'>
-[INFO_extract_features]---type(features-->> <class 'numpy.ndarray'>
---normalized_features.shape--- (2048,)
--[INFO_get_img2vec]-STARTED---Extracting Contours ----->> 3
-[INFO_get_cntrs]-img_init.shape-- (322, 261, 3)
-[INFO_get_cntrs]--type(max_cntr_area-- <class 'numpy.ndarray'>
-[INFO_get_cntrs]--max_cntr_area-- [[[141  92]]

 [[140  93]]

 [[139  93]]

 [[136  96]]

 [[135  96]]

 [[134  97]]

 [[134  98]]

 [[132 100]]

 [[131 100]]

 [[129 102]]

 [[129 103]]

 [[128 104]]

 [[127 103]]

 [[127 101]]

 [[128 100]]

 [[128  99]]

 [[128 100]]

 [[127 101]]

 [[127 103]]

 [[126 104]]

 [[125 104]]

 [[124 103]]

 [[124 101]]

 [[122 103]]

 [[119 100]]

 [[119  99]]

 [[120  98]]

 [[120  97]]

 [[120  98]]

 [[119  99]]

 [[118  99]]

 [[117  98]]

 [[117  99]]

 [[116 100]]

 [[116 104]]

 [[115 105]]

 [[113 105]]

 [[112 104]]

 [[112 102]]

 [[113 101]]

 [[113 100]]

 [[112 100]]

 [[111 101]]

 [[109 101]]

 [[106 104]]

 [[103 104]]

 [[102 105]]

 [[101 104]]

 [[101 105]]

 [[ 99 107]]

 [[ 98 106]]

 [[ 98 104]]

 [[ 97 103]]

 [[ 97 101]]

 [[ 96 102]]

 [[ 96 104]]

 [[ 94 106]]

 [[ 94 107]]

 [[ 92 109]]

 [[ 91 109]]

 [[ 90 108]]

 [[ 90 104]]

 [[ 88 104]]

 [[ 88 106]]

 [[ 87 107]]

 [[ 86 107]]

 [[ 86 109]]

 [[ 85 110]]

 [[ 85 111]]

 [[ 84 112]]

 [[ 83 111]]

 [[ 83 110]]

 [[ 82 110]]

 [[ 82 111]]

 [[ 81 112]]

 [[ 79 112]]

 [[ 78 111]]

 [[ 79 110]]

 [[ 79 108]]

 [[ 79 109]]

 [[ 78 110]]

 [[ 78 112]]

 [[ 77 113]]

 [[ 77 114]]

 [[ 75 116]]

 [[ 74 116]]

 [[ 74 120]]

 [[ 73 121]]

 [[ 74 122]]

 [[ 73 123]]

 [[ 72 123]]

 [[ 72 127]]

 [[ 71 128]]

 [[ 71 130]]

 [[ 70 131]]

 [[ 70 133]]

 [[ 69 134]]

 [[ 69 135]]

 [[ 67 137]]

 [[ 67 139]]

 [[ 65 141]]

 [[ 65 142]]

 [[ 64 143]]

 [[ 64 144]]

 [[ 63 145]]

 [[ 63 147]]

 [[ 62 148]]

 [[ 62 151]]

 [[ 61 152]]

 [[ 61 156]]

 [[ 60 157]]

 [[ 60 160]]

 [[ 59 161]]

 [[ 59 168]]

 [[ 60 169]]

 [[ 60 171]]

 [[ 58 173]]

 [[ 59 173]]

 [[ 60 174]]

 [[ 60 182]]

 [[ 62 184]]

 [[ 62 185]]

 [[ 61 186]]

 [[ 61 187]]

 [[ 62 187]]

 [[ 63 188]]

 [[ 63 190]]

 [[ 62 191]]

 [[ 61 190]]

 [[ 61 191]]

 [[ 60 192]]

 [[ 61 191]]

 [[ 62 191]]

 [[ 63 192]]

 [[ 63 195]]

 [[ 62 196]]

 [[ 62 199]]

 [[ 63 200]]

 [[ 63 207]]

 [[ 64 208]]

 [[ 64 212]]

 [[ 66 214]]

 [[ 65 215]]

 [[ 64 215]]

 [[ 65 216]]

 [[ 65 217]]

 [[ 66 217]]

 [[ 67 218]]

 [[ 67 220]]

 [[ 66 221]]

 [[ 69 224]]

 [[ 69 228]]

 [[ 70 229]]

 [[ 70 231]]

 [[ 69 232]]

 [[ 69 234]]

 [[ 70 234]]

 [[ 71 235]]

 [[ 71 237]]

 [[ 72 238]]

 [[ 72 239]]

 [[ 71 240]]

 [[ 72 241]]

 [[ 72 242]]

 [[ 75 245]]

 [[ 76 245]]

 [[ 77 246]]

 [[ 77 248]]

 [[ 78 249]]

 [[ 79 249]]

 [[ 80 250]]

 [[ 80 251]]

 [[ 79 252]]

 [[ 80 253]]

 [[ 82 253]]

 [[ 83 254]]

 [[ 83 255]]

 [[ 84 256]]

 [[ 83 257]]

 [[ 87 257]]

 [[ 88 258]]

 [[ 88 259]]

 [[ 89 258]]

 [[ 90 258]]

 [[ 91 259]]

 [[ 91 260]]

 [[ 93 262]]

 [[ 95 262]]

 [[ 96 263]]

 [[ 95 264]]

 [[ 95 265]]

 [[ 96 264]]

 [[ 98 266]]

 [[ 99 266]]

 [[100 267]]

 [[100 268]]

 [[102 270]]

 [[101 271]]

 [[102 271]]

 [[104 273]]

 [[106 273]]

 [[107 274]]

 [[108 274]]

 [[110 276]]

 [[111 276]]

 [[112 275]]

 [[113 275]]

 [[114 276]]

 [[114 277]]

 [[124 277]]

 [[125 278]]

 [[126 277]]

 [[127 277]]

 [[128 278]]

 [[141 278]]

 [[142 277]]

 [[148 277]]

 [[149 276]]

 [[153 276]]

 [[155 274]]

 [[156 274]]

 [[156 273]]

 [[158 271]]

 [[159 271]]

 [[160 270]]

 [[160 269]]

 [[161 268]]

 [[162 268]]

 [[164 266]]

 [[165 266]]

 [[166 265]]

 [[167 265]]

 [[169 263]]

 [[171 263]]

 [[172 262]]

 [[173 263]]

 [[175 261]]

 [[176 261]]

 [[178 259]]

 [[179 259]]

 [[180 258]]

 [[180 257]]

 [[181 256]]

 [[182 256]]

 [[184 254]]

 [[184 252]]

 [[185 251]]

 [[187 251]]

 [[187 249]]

 [[188 248]]

 [[188 246]]

 [[189 245]]

 [[189 244]]

 [[191 242]]

 [[191 240]]

 [[192 239]]

 [[193 240]]

 [[193 239]]

 [[192 238]]

 [[195 235]]

 [[195 233]]

 [[197 231]]

 [[197 224]]

 [[198 223]]

 [[199 223]]

 [[200 224]]

 [[199 223]]

 [[199 222]]

 [[198 221]]

 [[198 220]]

 [[199 219]]

 [[199 209]]

 [[200 208]]

 [[201 209]]

 [[201 207]]

 [[200 206]]

 [[200 204]]

 [[201 203]]

 [[201 189]]

 [[202 188]]

 [[202 186]]

 [[201 185]]

 [[201 184]]

 [[202 183]]

 [[202 180]]

 [[203 179]]

 [[202 178]]

 [[202 177]]

 [[203 176]]

 [[202 175]]

 [[203 174]]

 [[202 173]]

 [[203 172]]

 [[203 164]]

 [[202 163]]

 [[203 162]]

 [[203 159]]

 [[202 158]]

 [[202 156]]

 [[201 155]]

 [[201 152]]

 [[200 151]]

 [[200 146]]

 [[199 145]]

 [[199 143]]

 [[197 141]]

 [[197 138]]

 [[194 135]]

 [[194 134]]

 [[193 133]]

 [[193 132]]

 [[192 131]]

 [[192 130]]

 [[191 129]]

 [[191 126]]

 [[189 124]]

 [[189 118]]

 [[188 117]]

 [[188 116]]

 [[187 115]]

 [[187 111]]

 [[186 110]]

 [[186 108]]

 [[184 108]]

 [[183 107]]

 [[183 106]]

 [[184 105]]

 [[185 105]]

 [[186 106]]

 [[185 105]]

 [[185 103]]

 [[184 103]]

 [[183 102]]

 [[184 101]]

 [[185 101]]

 [[184 100]]

 [[183 100]]

 [[181 102]]

 [[180 101]]

 [[179 102]]

 [[178 101]]

 [[177 102]]

 [[176 101]]

 [[176  99]]

 [[173  96]]

 [[172  96]]

 [[173  97]]

 [[171  99]]

 [[170  99]]

 [[169  98]]

 [[168  98]]

 [[167  99]]

 [[166  99]]

 [[163 102]]

 [[162 101]]

 [[162  99]]

 [[163  98]]

 [[163  97]]

 [[164  96]]

 [[164  94]]

 [[163  94]]

 [[162  95]]

 [[161  95]]

 [[158  98]]

 [[158 100]]

 [[157 101]]

 [[156 101]]

 [[155 100]]

 [[156  99]]

 [[156  97]]

 [[154  95]]

 [[155  94]]

 [[155  93]]

 [[153  93]]

 [[151  95]]

 [[148  95]]

 [[147  94]]

 [[146  95]]

 [[145  95]]

 [[144  96]]

 [[144  97]]

 [[143  98]]

 [[142  97]]

 [[140  97]]

 [[139  96]]

 [[139  95]]

 [[140  94]]

 [[141  94]]]
-[INFO_get_cntrs]--type(max_cntr_perimeter--- <class 'list'>
-[INFO_get_cntrs]--type(max_cntr_perimeter--- 201
-[INFO_get_cntrs]--max_cntr_perimeter--- [[[141  92]]

 [[140  93]]

 [[139  93]]

 [[136  96]]

 [[135  96]]

 [[134  97]]

 [[134  98]]

 [[132 100]]

 [[131 100]]

 [[129 102]]

 [[129 103]]

 [[128 104]]

 [[127 103]]

 [[127 101]]

 [[128 100]]

 [[128  99]]

 [[128 100]]

 [[127 101]]

 [[127 103]]

 [[126 104]]

 [[125 104]]

 [[124 103]]

 [[124 101]]

 [[122 103]]

 [[119 100]]

 [[119  99]]

 [[120  98]]

 [[120  97]]

 [[120  98]]

 [[119  99]]

 [[118  99]]

 [[117  98]]

 [[117  99]]

 [[116 100]]

 [[116 104]]

 [[115 105]]

 [[113 105]]

 [[112 104]]

 [[112 102]]

 [[113 101]]

 [[113 100]]

 [[112 100]]

 [[111 101]]

 [[109 101]]

 [[106 104]]

 [[103 104]]

 [[102 105]]

 [[101 104]]

 [[101 105]]

 [[ 99 107]]

 [[ 98 106]]

 [[ 98 104]]

 [[ 97 103]]

 [[ 97 101]]

 [[ 96 102]]

 [[ 96 104]]

 [[ 94 106]]

 [[ 94 107]]

 [[ 92 109]]

 [[ 91 109]]

 [[ 90 108]]

 [[ 90 104]]

 [[ 88 104]]

 [[ 88 106]]

 [[ 87 107]]

 [[ 86 107]]

 [[ 86 109]]

 [[ 85 110]]

 [[ 85 111]]

 [[ 84 112]]

 [[ 83 111]]

 [[ 83 110]]

 [[ 82 110]]

 [[ 82 111]]

 [[ 81 112]]

 [[ 79 112]]

 [[ 78 111]]

 [[ 79 110]]

 [[ 79 108]]

 [[ 79 109]]

 [[ 78 110]]

 [[ 78 112]]

 [[ 77 113]]

 [[ 77 114]]

 [[ 75 116]]

 [[ 74 116]]

 [[ 74 120]]

 [[ 73 121]]

 [[ 74 122]]

 [[ 73 123]]

 [[ 72 123]]

 [[ 72 127]]

 [[ 71 128]]

 [[ 71 130]]

 [[ 70 131]]

 [[ 70 133]]

 [[ 69 134]]

 [[ 69 135]]

 [[ 67 137]]

 [[ 67 139]]

 [[ 65 141]]

 [[ 65 142]]

 [[ 64 143]]

 [[ 64 144]]

 [[ 63 145]]

 [[ 63 147]]

 [[ 62 148]]

 [[ 62 151]]

 [[ 61 152]]

 [[ 61 156]]

 [[ 60 157]]

 [[ 60 160]]

 [[ 59 161]]

 [[ 59 168]]

 [[ 60 169]]

 [[ 60 171]]

 [[ 58 173]]

 [[ 59 173]]

 [[ 60 174]]

 [[ 60 182]]

 [[ 62 184]]

 [[ 62 185]]

 [[ 61 186]]

 [[ 61 187]]

 [[ 62 187]]

 [[ 63 188]]

 [[ 63 190]]

 [[ 62 191]]

 [[ 61 190]]

 [[ 61 191]]

 [[ 60 192]]

 [[ 61 191]]

 [[ 62 191]]

 [[ 63 192]]

 [[ 63 195]]

 [[ 62 196]]

 [[ 62 199]]

 [[ 63 200]]

 [[ 63 207]]

 [[ 64 208]]

 [[ 64 212]]

 [[ 66 214]]

 [[ 65 215]]

 [[ 64 215]]

 [[ 65 216]]

 [[ 65 217]]

 [[ 66 217]]

 [[ 67 218]]

 [[ 67 220]]

 [[ 66 221]]

 [[ 69 224]]

 [[ 69 228]]

 [[ 70 229]]

 [[ 70 231]]

 [[ 69 232]]

 [[ 69 234]]

 [[ 70 234]]

 [[ 71 235]]

 [[ 71 237]]

 [[ 72 238]]

 [[ 72 239]]

 [[ 71 240]]

 [[ 72 241]]

 [[ 72 242]]

 [[ 75 245]]

 [[ 76 245]]

 [[ 77 246]]

 [[ 77 248]]

 [[ 78 249]]

 [[ 79 249]]

 [[ 80 250]]

 [[ 80 251]]

 [[ 79 252]]

 [[ 80 253]]

 [[ 82 253]]

 [[ 83 254]]

 [[ 83 255]]

 [[ 84 256]]

 [[ 83 257]]

 [[ 87 257]]

 [[ 88 258]]

 [[ 88 259]]

 [[ 89 258]]

 [[ 90 258]]

 [[ 91 259]]

 [[ 91 260]]

 [[ 93 262]]

 [[ 95 262]]

 [[ 96 263]]

 [[ 95 264]]

 [[ 95 265]]

 [[ 96 264]]

 [[ 98 266]]

 [[ 99 266]]

 [[100 267]]

 [[100 268]]

 [[102 270]]

 [[101 271]]

 [[102 271]]

 [[104 273]]

 [[106 273]]

 [[107 274]]

 [[108 274]]

 [[110 276]]

 [[111 276]]

 [[112 275]]

 [[113 275]]

 [[114 276]]

 [[114 277]]

 [[124 277]]

 [[125 278]]

 [[126 277]]

 [[127 277]]

 [[128 278]]

 [[141 278]]

 [[142 277]]

 [[148 277]]

 [[149 276]]

 [[153 276]]

 [[155 274]]

 [[156 274]]

 [[156 273]]

 [[158 271]]

 [[159 271]]

 [[160 270]]

 [[160 269]]

 [[161 268]]

 [[162 268]]

 [[164 266]]

 [[165 266]]

 [[166 265]]

 [[167 265]]

 [[169 263]]

 [[171 263]]

 [[172 262]]

 [[173 263]]

 [[175 261]]

 [[176 261]]

 [[178 259]]

 [[179 259]]

 [[180 258]]

 [[180 257]]

 [[181 256]]

 [[182 256]]

 [[184 254]]

 [[184 252]]

 [[185 251]]

 [[187 251]]

 [[187 249]]

 [[188 248]]

 [[188 246]]

 [[189 245]]

 [[189 244]]

 [[191 242]]

 [[191 240]]

 [[192 239]]

 [[193 240]]

 [[193 239]]

 [[192 238]]

 [[195 235]]

 [[195 233]]

 [[197 231]]

 [[197 224]]

 [[198 223]]

 [[199 223]]

 [[200 224]]

 [[199 223]]

 [[199 222]]

 [[198 221]]

 [[198 220]]

 [[199 219]]

 [[199 209]]

 [[200 208]]

 [[201 209]]

 [[201 207]]

 [[200 206]]

 [[200 204]]

 [[201 203]]

 [[201 189]]

 [[202 188]]

 [[202 186]]

 [[201 185]]

 [[201 184]]

 [[202 183]]

 [[202 180]]

 [[203 179]]

 [[202 178]]

 [[202 177]]

 [[203 176]]

 [[202 175]]

 [[203 174]]

 [[202 173]]

 [[203 172]]

 [[203 164]]

 [[202 163]]

 [[203 162]]

 [[203 159]]

 [[202 158]]

 [[202 156]]

 [[201 155]]

 [[201 152]]

 [[200 151]]

 [[200 146]]

 [[199 145]]

 [[199 143]]

 [[197 141]]

 [[197 138]]

 [[194 135]]

 [[194 134]]

 [[193 133]]

 [[193 132]]

 [[192 131]]

 [[192 130]]

 [[191 129]]

 [[191 126]]

 [[189 124]]

 [[189 118]]

 [[188 117]]

 [[188 116]]

 [[187 115]]

 [[187 111]]

 [[186 110]]

 [[186 108]]

 [[184 108]]

 [[183 107]]

 [[183 106]]

 [[184 105]]

 [[185 105]]

 [[186 106]]

 [[185 105]]

 [[185 103]]

 [[184 103]]

 [[183 102]]

 [[184 101]]

 [[185 101]]

 [[184 100]]

 [[183 100]]

 [[181 102]]

 [[180 101]]

 [[179 102]]

 [[178 101]]

 [[177 102]]

 [[176 101]]

 [[176  99]]

 [[173  96]]

 [[172  96]]

 [[173  97]]

 [[171  99]]

 [[170  99]]

 [[169  98]]

 [[168  98]]

 [[167  99]]

 [[166  99]]

 [[163 102]]

 [[162 101]]

 [[162  99]]

 [[163  98]]

 [[163  97]]

 [[164  96]]

 [[164  94]]

 [[163  94]]

 [[162  95]]

 [[161  95]]

 [[158  98]]

 [[158 100]]

 [[157 101]]

 [[156 101]]

 [[155 100]]

 [[156  99]]

 [[156  97]]

 [[154  95]]

 [[155  94]]

 [[155  93]]

 [[153  93]]

 [[151  95]]

 [[148  95]]

 [[147  94]]

 [[146  95]]

 [[145  95]]

 [[144  96]]

 [[144  97]]

 [[143  98]]

 [[142  97]]

 [[140  97]]

 [[139  96]]

 [[139  95]]

 [[140  94]]

 [[141  94]]]
---LEN-cntrs---- 201
---img_init.shape---- (322, 261, 3)
--TEST---aa---type(img_max_area_cntr)---- <class 'numpy.ndarray'>
---path_img_cntrs----
 ./output_dir/knn_similar_images/faces_1/max_area_cntr/image
---img_init.shape---- (322, 261, 3)
--TEST---aa---type(img_max_perimeter_cntr)---- <class 'numpy.ndarray'>
---path_img_cntrs----
 ./output_dir/knn_similar_images/faces_1/max_perimeter_cntr/image
---img_init.shape---- (322, 261, 3)
---path_img_cntrs----
 ./output_dir/knn_similar_images/faces_1/all_cntrs/image
-[INFO_extract_features]---type(img_array-->> <class 'numpy.ndarray'>
-[INFO_extract_features]---type(preprocessed_img-->> <class 'numpy.ndarray'>
-[INFO_extract_features]---type(features-->> <class 'numpy.ndarray'>
---normalized_features.shape--- (2048,)
--[INFO_get_img2vec]-STARTED---Extracting Contours ----->> 4
-[INFO_get_cntrs]-img_init.shape-- (330, 290, 3)
-[INFO_get_cntrs]--type(max_cntr_area-- <class 'numpy.ndarray'>
-[INFO_get_cntrs]--max_cntr_area-- [[[ 0  0]]

 [[ 0 43]]

 [[ 1 44]]

 ...

 [[ 1  6]]

 [[ 1  4]]

 [[ 0  3]]]
-[INFO_get_cntrs]--type(max_cntr_perimeter--- <class 'list'>
-[INFO_get_cntrs]--type(max_cntr_perimeter--- 178
-[INFO_get_cntrs]--max_cntr_perimeter--- [[[ 0  0]]

 [[ 0 43]]

 [[ 1 44]]

 ...

 [[ 1  6]]

 [[ 1  4]]

 [[ 0  3]]]
---LEN-cntrs---- 178
---img_init.shape---- (330, 290, 3)
--TEST---aa---type(img_max_area_cntr)---- <class 'numpy.ndarray'>
---path_img_cntrs----
 ./output_dir/knn_similar_images/faces_1/max_area_cntr/image
---img_init.shape---- (330, 290, 3)
--TEST---aa---type(img_max_perimeter_cntr)---- <class 'numpy.ndarray'>
---path_img_cntrs----
 ./output_dir/knn_similar_images/faces_1/max_perimeter_cntr/image
---img_init.shape---- (330, 290, 3)
---path_img_cntrs----
 ./output_dir/knn_similar_images/faces_1/all_cntrs/image
-[INFO_extract_features]---type(img_array-->> <class 'numpy.ndarray'>
-[INFO_extract_features]---type(preprocessed_img-->> <class 'numpy.ndarray'>
-[INFO_extract_features]---type(features-->> <class 'numpy.ndarray'>
---normalized_features.shape--- (2048,)
---get_img2vec--len(ls_feature---- 5
----get_img2vec-len(ls_feature[0]---- 2048
